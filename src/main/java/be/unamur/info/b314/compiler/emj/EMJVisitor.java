package be.unamur.info.b314.compiler.emj;

import be.unamur.info.b314.compiler.EMJLexer;
import be.unamur.info.b314.compiler.EMJParser;
import be.unamur.info.b314.compiler.emj.EMJError;
import be.unamur.info.b314.compiler.emj.EMJErrorLogger;

import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

/*
Visitor class for the EMJ language, extending the base visitor class generated by ANTLR
@author : Alix Decrop
@version : 1.0
*/
public class EMJVisitor extends be.unamur.info.b314.compiler.EMJParserBaseVisitor<Object> {

    private EMJErrorLogger errorLogger;
    private ArrayList<String> varIds;

    public EMJVisitor() {
        this.errorLogger = new EMJErrorLogger();
        this.varIds = new ArrayList<String>();
    }

    public EMJErrorLogger getErrorLogger() {
        return this.errorLogger;
    }

    /*
    SEMANTIC_VAR_DECL
    */
//    @Override
//    public Object visitVarDecl(EMJParser.VarDeclContext ctx) {
//
//        // SEMANTIC_CHECK_VAR_ID_ALREADY_EXISTS : Check if the id in the variable declaration does not exist yet
//        String varId = ctx.EMOJI_ID().getText();
//
//        // If the variable id is contained in the variable id array, add an error
//        if(this.varIds.contains(varId)) {
//            this.errorLogger.addError(new EMJError("varIdAlreadyExists", ctx.getText(), ctx.start.getLine()));
//        }
//
//        else {
//            this.varIds.add(varId);
//        }
//
//        return null;
//    }
//
//    /*
//    SEMANTIC_VAR_AFFECT
//    */
//    @Override
//    public Object visitVarAffect(EMJParser.VarAffectContext ctx) {
//
//        // SEMANTIC_CHECK_VAR_IS_DECL : Check if an id in a variable affectation has been previously declared
//        String varId = ctx.EMOJI_ID().getText();
//
//        // If the variable id is not contained in the variable id array, add an error
//        if(!this.varIds.contains(varId)) {
//            this.errorLogger.addError(new EMJError("varIdNotDecl", ctx.getText(), ctx.start.getLine()));
//        }
//
//        return null;
//    }
}